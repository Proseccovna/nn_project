import torch
import streamlit as st
import io
import imageio
import requests
from PIL import Image
from torchvision import transforms as T
from torchvision.models import densenet121
# from torchvision import io
import torch.nn as nn
import time
from models.model_1.predict_model_1 import predict_1
from models.model_2.predict_model_2 import predict_2

# st.set_page_config(layout='wide')

st.title('–ü—Ä–æ–µ–∫—Ç ‚Ä¢ –í–≤–µ–¥–µ–Ω–∏–µ –≤ –Ω–µ–π—Ä–æ–Ω–Ω—ã–µ —Å–µ—Ç–∏')


with st.sidebar:
    st.header('–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É')
    page = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É", ["–ì–ª–∞–≤–Ω–∞—è", "–í—Ä–µ–º–µ–Ω–∞ –≥–æ–¥–∞", "–ö—Å—Ç–∞—Ç–∏, –æ –ø—Ç–∏—á–∫–∞—Ö", "–ò—Ç–æ–≥–∏"])

if page == "–ì–ª–∞–≤–Ω–∞—è":
    st.header('–í—ã–ø–æ–ª–Ω–∏–ª–∞ –∫–æ–º–∞–Ω–¥–∞ "DenseNet":')
    st.subheader('üê±–†—É—Å–ª–∞–Ω')
    st.subheader('üê±–¢–∞—Ç–∞')

    st.header(" üåü " * 10)

    st.header('–ù–∞—à–∏ –¥–∞—Ç–∞—Å–µ—Ç—ã:')
    st.subheader(
        '*–ó–∞–¥–∞—á–∞ ‚Ññ1*: –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ø—Ä–∏—Ä–æ–¥—ã –ø–æ –≤—Ä–µ–º–µ–Ω–∞–º –≥–æ–¥–∞ (–æ–±—É—á–µ–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞—Ç–∞—Å–µ—Ç–∞ *Weather Image Recognition*)')

    st.subheader('*–ó–∞–¥–∞—á–∞ ‚Ññ2*: –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤–∏–¥–∞ –ø—Ç–∏—á–∫–∏ –ø–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏.')


elif page == "–í—Ä–µ–º–µ–Ω–∞ –≥–æ–¥–∞":
    st.header("–ü—Ä–æ—Ü–µ—Å—Å –æ–±—É—á–µ–Ω–∏—è:")
    st.subheader("- –ú–æ–¥–µ–ª—å: *resenet34*")
    st.subheader("- –û–ø—Ç–∏–º–∏–∑–∞—Ç–æ—Ä: Adam —Å–æ –≤—Å–µ–º–∏ –≥–∏–ø–µ—Ä–ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.")
    st.subheader("- –û–±—É—á–∞–µ–º—ã–µ —Å–ª–æ–∏ –º–æ–¥–µ–ª–∏: \n- –í—ã—Ö–æ–¥–Ω–æ–π –ø–æ–ª–Ω–æ—Å–≤—è–∑–∞–Ω–Ω—ã–π —Å–ª–æ–π —Å 11-—é –≤—ã—Ö–æ–¥–∞–º–∏.")

    st.info('–†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ .jpg/.jpeg')
    image_url = st.text_input("–í–≤–µ–¥–∏—Ç–µ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã")
    start_time = time.time()

    if image_url:
        # –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ —Å—Å—ã–ª–∫–µ
        response = requests.get(image_url)
        image = Image.open(io.BytesIO(response.content))
        st.subheader('–í–∞—à–µ —Ñ–æ—Ç–æ:')
        st.image(image)
        st.subheader('–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏:')
        st.write(f'- {predict_1(image)}')
        st.subheader(f'–í—Ä–µ–º—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è: {round((time.time() - start_time), 2)} —Å–µ–∫.')

        st.header('üéà' * 10)


elif page == "–ö—Å—Ç–∞—Ç–∏, –æ –ø—Ç–∏—á–∫–∞—Ö":
    st.header("–ü—Ä–æ—Ü–µ—Å—Å –æ–±—É—á–µ–Ω–∏—è:")
    st.subheader("- –ú–æ–¥–µ–ª—å: *densenet121*")
    st.subheader("- –û–ø—Ç–∏–º–∏–∑–∞—Ç–æ—Ä: Adam —Å–æ –≤—Å–µ–º–∏ –≥–∏–ø–µ—Ä–ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.")
    st.subheader("- –û–±—É—á–∞–µ–º—ã–µ —Å–ª–æ–∏ –º–æ–¥–µ–ª–∏: \n- *classifier* —Å –≤—Ö–æ–¥–Ω—ã–º–∏ 1024 –∏ –≤—ã—Ö–æ–¥–Ω—ã–º–∏ 612 —Å–∏–≥–Ω–∞–ª–∞–º–∏. \
    \n- *classifier_out*  —Å –≤—Ö–æ–¥–Ω—ã–º–∏ 612 –∏ –≤—ã—Ö–æ–¥–Ω—ã–º–∏ 200 —Å–∏–≥–Ω–∞–ª–∞–º–∏")

    st.info('–†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ .jpg/.jpeg')
    image_url2 = st.text_input("–í–≤–µ–¥–∏—Ç–µ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤–∞—à–µ–π –ø—Ç–∏—á–∫–∏")
    start_time2 = time.time()

    if image_url2:
        # –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ —Å—Å—ã–ª–∫–µ
        response2 = requests.get(image_url2)
        image2 = Image.open(io.BytesIO(response2.content))
        st.subheader('–§–æ—Ç–æ –≤–∞—à–µ–π –ø—Ç–∏—á–∫–∏:')
        st.image(image2)
        st.subheader("–ú—ã —É–∑–Ω–∞–ª–∏, —á—Ç–æ —ç—Ç–æ –∑–∞ –ø—Ç–∏—á–∫–∞:")
        st.write(f'- {predict_2(image2)}')
        st.subheader(f'–í—Ä–µ–º—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è: {round((time.time() - start_time2), 2)} —Å–µ–∫.')

        st.header('üéà' * 10)



elif page == "–ò—Ç–æ–≥–∏":
    st.header('–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ –≤—ã–≤–æ–¥—ã')
    st.subheader('–ó–∞–¥–∞—á–∞ ‚Ññ1')

    st.subheader("–¢–æ—á–Ω–æ—Å—Ç—å –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω–æ–π –∏ –≤–∞–ª–∏–¥–∞—Ü–∏–æ–Ω–Ω–æ–π –≤—ã–±–æ—Ä–∫–∞—Ö (max = 0.75)")
    image6 = imageio.imread('acc1.png')[:, :, :]
    st.image(image6, caption="Caption")

    st.subheader("Loss –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω–æ–π –∏ –≤–∞–ª–∏–¥–∞—Ü–∏–æ–Ω–Ω–æ–π –≤—ã–±–æ—Ä–∫–∞—Ö")
    image7 = imageio.imread('loss1.png')[:, :, :]
    st.image(image7, caption="Caption")

    st.subheader('–ó–∞–¥–∞—á–∞ ‚Ññ2')
    st.subheader("–¢–æ—á–Ω–æ—Å—Ç—å –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω–æ–π –∏ –≤–∞–ª–∏–¥–∞—Ü–∏–æ–Ω–Ω–æ–π –≤—ã–±–æ—Ä–∫–∞—Ö (max = 0.65)")

    image3 = imageio.imread('Acc2.jpg')[:, :, :]
    st.image(image3, caption="Caption")

    st.subheader("Loss –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω–æ–π –∏ –≤–∞–ª–∏–¥–∞—Ü–∏–æ–Ω–Ω–æ–π –≤—ã–±–æ—Ä–∫–∞—Ö")

    image4 = imageio.imread('loss2.jpg')[:, :, :]
    st.image(image4, caption="Caption")

    st.subheader('–¢–∞–∫ –∂–µ –º—ã –ø—Ä–æ–±–æ–≤–∞–ª–∏: –ú–æ–¥–µ–ª—å resnet101')
    image5 = imageio.imread('101.jpg')[:, :, :]
    st.image(image5, caption="Caption")
    st.write('> **–í –ø—Ä–æ—Ü–µ—Å—Å–µ –æ–±—É—á–µ–Ω–∏—è –Ω–∞ –¥–∞–Ω–Ω—ã—Ö –æ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –≤–∏–¥–∞—Ö –ø—Ç–∏—Ü, –æ—á–µ–Ω—å –±—ã—Å—Ç—Ä–æ –ø–µ—Ä–µ–æ–±—É—á–∏–ª–∞—Å—å, \
                –ø–æ—Å–ª–µ —á–µ–≥–æ –ø—Ä–∏—à–ª–æ—Å—å –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–±—É—á–µ–Ω–∏–µ. –°–≤—è–∑–∞–Ω–æ —ç—Ç–æ —Å —Ç–µ–º, —á—Ç–æ –º–æ–¥–µ–ª—å –Ω–µ –∏–º–µ–µ—Ç –Ω–∏ \
                –æ–¥–Ω–æ–≥–æ Dropout —Å–ª–æ—è, –∞ –∫–æ–ª-–≤–æ —Å–ª–æ—ë–≤ –±–æ–ª–µ–µ 300. –í –≤—ã—Ö–æ–¥–Ω–æ–º —É—Ä–æ–≤–Ω–µ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏, \
                –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –µ—â—ë –æ–¥–∏–Ω Fully Connecter —Å–ª–æ–π, —Å 1028 –≤—Ö–æ–¥–∞–º–∏ –∏ 200-–º–∏ –≤—ã—Ö–æ–¥–∞–º–∏ (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∫–ª–∞—Å—Å–æ–≤ –ø—Ç–∏—Ü).**')

    # –†–ê–°–°–ö–ê–ó –û –¢–û–ú, –ö–ê–ö –ù–ê–ú –ë–´–õ–û –¢–Ø–ñ–ï–õ–û, –ù–û –ú–´ –°–ü–†–ê–í–ò–õ–ò–°–¨